// Generated by view binder compiler. Do not edit!
package com.example.eataewon.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.eataewon.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.daum.mf.map.api.MapView;

public final class ActivityKakaoMapBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnNextPage;

  @NonNull
  public final Button btnPrevPage;

  @NonNull
  public final Button btnSearch;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final EditText etSearchField;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final RecyclerView rvList;

  private ActivityKakaoMapBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnNextPage,
      @NonNull Button btnPrevPage, @NonNull Button btnSearch,
      @NonNull ConstraintLayout constraintLayout, @NonNull EditText etSearchField,
      @NonNull MapView mapView, @NonNull RecyclerView rvList) {
    this.rootView = rootView;
    this.btnNextPage = btnNextPage;
    this.btnPrevPage = btnPrevPage;
    this.btnSearch = btnSearch;
    this.constraintLayout = constraintLayout;
    this.etSearchField = etSearchField;
    this.mapView = mapView;
    this.rvList = rvList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityKakaoMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityKakaoMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_kakao_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityKakaoMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_nextPage;
      Button btnNextPage = ViewBindings.findChildViewById(rootView, id);
      if (btnNextPage == null) {
        break missingId;
      }

      id = R.id.btn_prevPage;
      Button btnPrevPage = ViewBindings.findChildViewById(rootView, id);
      if (btnPrevPage == null) {
        break missingId;
      }

      id = R.id.btn_search;
      Button btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.et_search_field;
      EditText etSearchField = ViewBindings.findChildViewById(rootView, id);
      if (etSearchField == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.rv_list;
      RecyclerView rvList = ViewBindings.findChildViewById(rootView, id);
      if (rvList == null) {
        break missingId;
      }

      return new ActivityKakaoMapBinding((ConstraintLayout) rootView, btnNextPage, btnPrevPage,
          btnSearch, constraintLayout, etSearchField, mapView, rvList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
