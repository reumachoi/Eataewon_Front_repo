// Generated by view binder compiler. Do not edit!
package com.example.eataewon.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.eataewon.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWriteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final TextView shopNameT;

  @NonNull
  public final TextView textView;

  @NonNull
  public final EditText writeAddress;

  @NonNull
  public final Button writeAddressBtn;

  @NonNull
  public final Button writeCancleBtn;

  @NonNull
  public final EditText writeContent;

  @NonNull
  public final EditText writeHashtag;

  @NonNull
  public final Button writeImageBtn;

  @NonNull
  public final RecyclerView writeRecyclerview;

  @NonNull
  public final EditText writeTitle;

  @NonNull
  public final Button writeWriteBtn;

  private ActivityWriteBinding(@NonNull ConstraintLayout rootView, @NonNull FrameLayout frameLayout,
      @NonNull HorizontalScrollView horizontalScrollView, @NonNull TextView shopNameT,
      @NonNull TextView textView, @NonNull EditText writeAddress, @NonNull Button writeAddressBtn,
      @NonNull Button writeCancleBtn, @NonNull EditText writeContent,
      @NonNull EditText writeHashtag, @NonNull Button writeImageBtn,
      @NonNull RecyclerView writeRecyclerview, @NonNull EditText writeTitle,
      @NonNull Button writeWriteBtn) {
    this.rootView = rootView;
    this.frameLayout = frameLayout;
    this.horizontalScrollView = horizontalScrollView;
    this.shopNameT = shopNameT;
    this.textView = textView;
    this.writeAddress = writeAddress;
    this.writeAddressBtn = writeAddressBtn;
    this.writeCancleBtn = writeCancleBtn;
    this.writeContent = writeContent;
    this.writeHashtag = writeHashtag;
    this.writeImageBtn = writeImageBtn;
    this.writeRecyclerview = writeRecyclerview;
    this.writeTitle = writeTitle;
    this.writeWriteBtn = writeWriteBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_write, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.shopNameT;
      TextView shopNameT = ViewBindings.findChildViewById(rootView, id);
      if (shopNameT == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.write_address;
      EditText writeAddress = ViewBindings.findChildViewById(rootView, id);
      if (writeAddress == null) {
        break missingId;
      }

      id = R.id.write_addressBtn;
      Button writeAddressBtn = ViewBindings.findChildViewById(rootView, id);
      if (writeAddressBtn == null) {
        break missingId;
      }

      id = R.id.write_cancleBtn;
      Button writeCancleBtn = ViewBindings.findChildViewById(rootView, id);
      if (writeCancleBtn == null) {
        break missingId;
      }

      id = R.id.write_content;
      EditText writeContent = ViewBindings.findChildViewById(rootView, id);
      if (writeContent == null) {
        break missingId;
      }

      id = R.id.write_hashtag;
      EditText writeHashtag = ViewBindings.findChildViewById(rootView, id);
      if (writeHashtag == null) {
        break missingId;
      }

      id = R.id.write_imageBtn;
      Button writeImageBtn = ViewBindings.findChildViewById(rootView, id);
      if (writeImageBtn == null) {
        break missingId;
      }

      id = R.id.write_recyclerview;
      RecyclerView writeRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (writeRecyclerview == null) {
        break missingId;
      }

      id = R.id.write_title;
      EditText writeTitle = ViewBindings.findChildViewById(rootView, id);
      if (writeTitle == null) {
        break missingId;
      }

      id = R.id.write_writeBtn;
      Button writeWriteBtn = ViewBindings.findChildViewById(rootView, id);
      if (writeWriteBtn == null) {
        break missingId;
      }

      return new ActivityWriteBinding((ConstraintLayout) rootView, frameLayout,
          horizontalScrollView, shopNameT, textView, writeAddress, writeAddressBtn, writeCancleBtn,
          writeContent, writeHashtag, writeImageBtn, writeRecyclerview, writeTitle, writeWriteBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
